public class testclasses.AccessFieldsOfObjectsSuccess extends java.lang.Object
{

    public void <init>()
    {
        testclasses.AccessFieldsOfObjectsSuccess r0;
        analyzer.level2.HandleStmt hs;
        java.lang.String local_for_Strings;
        java.lang.String[] local_for_String_Arrays;
        java.lang.Object local_for_Objects;

        r0 := @this: testclasses.AccessFieldsOfObjectsSuccess;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        hs = new analyzer.level2.HandleStmt;

        specialinvoke hs.<analyzer.level2.HandleStmt: void <init>()>();

        virtualinvoke hs.<analyzer.level2.HandleStmt: void initHandleStmtUtils(boolean,int)>(0, 0);

        virtualinvoke hs.<analyzer.level2.HandleStmt: void addObjectToObjectMap(java.lang.Object)>(r0);

        virtualinvoke hs.<analyzer.level2.HandleStmt: void close()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0, local_for_String_Arrays;
        java.lang.String r2, local_for_Strings;
        testclasses.util.SimpleObject $r3;
        java.io.PrintStream $r4;
        analyzer.level2.HandleStmt hs;
        java.lang.Object local_for_Objects;

        r0 := @parameter0: java.lang.String[];

        hs = new analyzer.level2.HandleStmt;

        specialinvoke hs.<analyzer.level2.HandleStmt: void <init>()>();

        staticinvoke <analyzer.level2.HandleStmt: void init()>();

        virtualinvoke hs.<analyzer.level2.HandleStmt: void initHandleStmtUtils(boolean,int)>(0, 0);

        local_for_Strings = "testclasses.util.SimpleObject_$r3";

        virtualinvoke hs.<analyzer.level2.HandleStmt: void checkLocalPC(java.lang.String)>(local_for_Strings);

        virtualinvoke hs.<analyzer.level2.HandleStmt: java.lang.Object setLevelOfLocal(java.lang.String)>(local_for_Strings);

        $r3 = new testclasses.util.SimpleObject;

        specialinvoke $r3.<testclasses.util.SimpleObject: void <init>()>();

        virtualinvoke hs.<analyzer.level2.HandleStmt: void pushInstanceLevelToGlobalPC(java.lang.String)>("testclasses.util.SimpleObject_$r3");

        local_for_Strings = "<testclasses.util.SimpleObject: java.lang.String field>";

        virtualinvoke hs.<analyzer.level2.HandleStmt: void checkGlobalPC(java.lang.Object,java.lang.String)>($r3, local_for_Strings);

        virtualinvoke hs.<analyzer.level2.HandleStmt: java.lang.Object setLevelOfField(java.lang.Object,java.lang.String)>($r3, local_for_Strings);

        virtualinvoke hs.<analyzer.level2.HandleStmt: java.lang.Object popGlobalPC()>();

        $r3.<testclasses.util.SimpleObject: java.lang.String field> = "New field value";

        local_for_Objects = $r3;

        local_for_Strings = "<testclasses.util.SimpleObject: java.lang.String field>";

        virtualinvoke hs.<analyzer.level2.HandleStmt: java.lang.Object joinLevelOfFieldAndAssignmentLevel(java.lang.Object,java.lang.String)>(local_for_Objects, local_for_Strings);

        local_for_Strings = "testclasses.util.SimpleObject_$r3";

        virtualinvoke hs.<analyzer.level2.HandleStmt: java.lang.Object joinLevelOfLocalAndAssignmentLevel(java.lang.String)>(local_for_Strings);

        local_for_Strings = "java.lang.String_r2";

        virtualinvoke hs.<analyzer.level2.HandleStmt: void checkLocalPC(java.lang.String)>(local_for_Strings);

        virtualinvoke hs.<analyzer.level2.HandleStmt: java.lang.Object setLevelOfLocal(java.lang.String)>(local_for_Strings);

        r2 = $r3.<testclasses.util.SimpleObject: java.lang.String field>;

        local_for_Objects = class "java/lang/System";

        local_for_Strings = "<java.lang.System: java.io.PrintStream out>";

        virtualinvoke hs.<analyzer.level2.HandleStmt: java.lang.Object joinLevelOfFieldAndAssignmentLevel(java.lang.Object,java.lang.String)>(local_for_Objects, local_for_Strings);

        local_for_Strings = "java.io.PrintStream_$r4";

        virtualinvoke hs.<analyzer.level2.HandleStmt: void checkLocalPC(java.lang.String)>(local_for_Strings);

        virtualinvoke hs.<analyzer.level2.HandleStmt: java.lang.Object setLevelOfLocal(java.lang.String)>(local_for_Strings);

        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke hs.<analyzer.level2.HandleStmt: void checkThatPCLe(java.lang.String)>("LOW");

        local_for_Strings = "java.lang.String_r2";

        virtualinvoke hs.<analyzer.level2.HandleStmt: void checkThatLe(java.lang.String,java.lang.String)>(local_for_Strings, "LOW");

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(r2);

        virtualinvoke hs.<analyzer.level2.HandleStmt: void close()>();

        return;
    }
}

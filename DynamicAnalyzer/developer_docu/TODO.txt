Start with:
Alle Anttests sollten laufen
Das kompilieren sollte laufen
Plan erstellen welche methode wie aussehen wird
Length = Array(Level) Context
All Unit tests should be correct
Read Paper
Variablen prüfen

>> Refactor HandleStmt
ExtClasses more testcases
InvokeInternalMethod
InvokeLibMethod
AccessFieldsOfObjects

Tests: 
Tags Codeursprung
Tests für alle value und statement arten

SecurityLevel-> Object, ".LOW .bottom()

PROGRAMMING
>> Value und Stmt Switch prüfen
>> main(arg) arg = low
>> Add a chain for arguments of the superconstructor
>> Scala Tutorial
>> Use SecDomain Interface


KONFIGURATION
>> Define sootClassPath for rt.jar in Main which works globally
>> URL = classLoader.getSystemResource
>> Bestimmen, welche Klassen analysiert werden und welche nicht (im Run...)

TESTS
>> Benchmarktests
>> Add all classfiletests to testmain
>> Fail/Success testclasses

./verify bearbeiten

FINALLY
>> konsistente variablenbezeichnung
>> Gute Javadoc Kommentare
>> bessere handleStmt logs
>> Überall Fehlerchecks einbauen
>> Remove all System.outs
>> Check all TODOs
>> InternalAnalyzerException richtige Fehlermeldung
>> thorough refactoring of handleStmt.
>> Move more parts to visitorhelper, HandleStmtUtils??

<<<<<<<<<  FRAGEN >>>>>>>>>>
Ant path - configuration?? Oder allgemein Konfiguration von Pfaden
Wie wird die richtige Klasse eingebunden (SecurityLevel)?
External methods no high arguments - and now?
In ValueSwitch: 	@Override
	public void caseParameterRef(ParameterRef v) {
		logger.finest("Parameter reference identified " + v.toString());
		throw new InternalAnalyzerException("Unhandled case of ParameterRef");
	}

	@Override
	public void caseCaughtExceptionRef(CaughtExceptionRef v) {
		rightElement = RightElement.NOT;
		if (actualContext == StmtContext.ASSIGNRIGHT) {
			new NotSupportedStmtException("CaughtExceptionRef");
		}
	} einmal geht throw und einmal nicht
	
Length:  > > > right side: [ImmediateBox(r0), LinkedRValueBox(lengthof r0)] < < <
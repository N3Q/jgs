Start with:

>> Run all Classtests automatically 
		Add tests for ALL Classes
		Check Code

ExtClasses more testcases
InvokeInternalMethod
InvokeLibMethod
AccessFieldsOfObjects
SwitchStmtFail:
	       tableswitch(i2)
        {
            case 1: goto label0;
            case 2: goto label1;
            default: goto label2;
        };
	



PROGRAMMING
>> Analyze all testclasses at once
>> Hash -> Identifier
>> Refactor HandleStmt
>> main(arg) arg = low
>> Add a chain for arguments of the superconstructor
>> addLevelOfArrayField in HandleStmt fertig machen
>> Read Paper
>> Scala Tutorial
>> Use SecDomain Interface

KONFIGURATION
>> Define sootClassPath for rt.jar in Main which works globally
>> URL = classLoader.getSystemResource
>> Bestimmen, welche Klassen analysiert werden und welche nicht (im Run...)

TESTS
>> All Unit tests should be correct
>> Benchmarktests
>> Add all classfiletests to testmain
>> Fail/Success testclasses

FINALLY
>> konsistente variablenbezeichnung
>> Gute Javadoc Kommentare
>> bessere handleStmt logs
>> Überall Fehlerchecks einbauen
>> Remove all System.outs
>> Check all TODOs
>> Exit Code not 0
>> InternalAnalyzerException richtige Fehlermeldung
>> thorough refactoring of handleStmt.
>> Move more parts to visitorhelper, HandleStmtUtils??

<<<<<<<<<  FRAGEN >>>>>>>>>>
Dominator arbeitet mit HashValue. Kann das zu Problemen (Kollisionen) führen?
	Oder ist die Wahrscheinlichkeit gering genug? Mehr Daten zusätzlich zu Hashwert?
Was tun mit LengthExpr?? zB in ForLoop.java
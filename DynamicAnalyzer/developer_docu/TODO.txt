Start with:
Alle Anttests sollten laufen
	Fehlermeldung, wenn Klasse nicht gefunden wird



Plan erstellen welche methode wie aussehen wird
All Unit tests should be correct
Read Paper
Beispiel fur SecurityLevel einbindung

>> Refactor HandleStmt
ExtClasses more testcases
InvokeInternalMethod
InvokeLibMethod
AccessFieldsOfObjects

Tests: 
Tags Codeursprung
Tests für alle value und statement arten

SecurityLevel-> Object, ".LOW .bottom()

PROGRAMMING
>> Value und Stmt Switch prüfen
>> main(arg) arg = low
>> Add a chain for arguments of the superconstructor
>> Scala Tutorial
>> Use SecDomain Interface

Test internal classes
Check all not Supported Statements
ValueSwitch: CaseNewExpr
Check all "Flags". Do I need all of them?

KONFIGURATION
>> Define sootClassPath for rt.jar in Main which works globally
>> URL = classLoader.getSystemResource
>> Bestimmen, welche Klassen analysiert werden und welche nicht (im Run...)

TESTS
>> Benchmarktests
>> Fail/Success testclasses

./verify bearbeiten

FINALLY
>> konsistente variablenbezeichnung
>> Gute Javadoc Kommentare
>> bessere handleStmt logs
>> Überall Fehlerchecks einbauen
>> Remove all System.outs
>> Check all TODOs
>> InternalAnalyzerException richtige Fehlermeldung
>> thorough refactoring of handleStmt.
>> Move more parts to visitorhelper, HandleStmtUtils??




<<<<<<<<<  FRAGEN >>>>>>>>>>
Ant path - configuration?? Oder allgemein Konfiguration von Pfaden
	
Zwei methoden von SecDomain

		if (!SecurityLevel.le(lpc, level)) {
			abort(ASSIGNMENT_ERROR_MESSAGE + signature);
		}
		
	protected Object joinLocals(String... stringList) {
		Object result = SecurityLevel.bottom();
		for (String op: stringList) {
			result = SecurityLevel.lub(result, localmap.getLevel(op));
		}
		return result;
	}
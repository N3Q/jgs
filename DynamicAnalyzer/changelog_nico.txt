Week 6:
- setLevelOf.. und check... auseinadnergezogen (handlestatement und jimpleinjector)
- neue fancy argumente: java DynamicAnazlyzerMain pathToFile (-j) (-o outputPath) (-p pathToFile)

Todo:
- mit ant builder alles super syncron machen
- NSU{3, 4, Static}: Problem noch ungelöst wie ich das machen soll.


Week 4:
- does not work at all on classes, even explicit leak is not noticed
- example gets run two times?! see SimpleDebug.


Week 3:
Note: All test auskommentiert, die sicher nichts mit akt. Problemstellung zu tun haben

Fazit => Was wollen wir?
a) Non-interference: High-Values dürfen nie in low-sec variablen landen!
b) Kein Output von High-Values über System.out.println() 
	
Bugs:
- See ImplicitFlow{2, 3}
- See SystemOut1 and SystemOut2		(problem not caused by initialize - present even w/o initi.)
- SwitchStmtFail{1, 2}
- NullPointer Exception: See DominatorNullPointer end2end test
	
Questions:
- what are objectmac.actualArgumentsLevel
- SimpleWhileLoop: Why IllegalFlowException?!


Notes:
- check if illegal flow (via local-sec-value > localPC) is contained in
	setLevelOfLocal method. I find this confusing, and not adhering to
	the seperation of concerns -> Split?
- global PC, only one, propagated down, reset after
	method is done
- local PC, implemented as a stack, used to different-
	iate between different ifs
	
	
None-sensitive upgrade: (checkPC...)
- system verliert informationen (ist theoretische beschränkung)
- wirft vorsorglich fehler

Week2:
- ClassCompile written: Compile end-to-end tests automatically before testrun
- Output folder now configurable via "-d desiredDir" for both the JUnit test and main method / run configurations
- Fixed bug that for some IllegalFlowExcpetion, even though no involved variable was given, the test still passed
- wrote readme.md with setup instructions, code overview and most important command line commands
- some testclasses need to be rewritten (about 10): Some are incomplete, some do not provide the desired information leak, some are empty, some miss involved variables
-- added involvedVars to "ArithmeticExpressionsFail"
-- Rewrote ArrayRef: Split up in two files (*Fail, *Success), made sure desired information leak is present/not present
-- Fixed IfStmt test: Split it up, supplied illegal flow in *Fail, supplied appropriate variable.
- documented which tests fail, and why. also fixed some tests.


-- Todo: write external classes test using hand-instrumented external class. check and fix other tests.


Week1:
- Introduction and getting to know the project 
- find out why JUnit Tests fail
- fixed a bug where end-to-end test passed because no compiled binary was present, and failed
	if an outdated binary was present
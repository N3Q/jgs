Week1:
- Introduction and getting to know the project 
- find out why JUnit Tests fail
- fixed a bug where end-to-end test passed because no compiled binary was present, and failed
	if an outdated binary was present

Week2:
- ClassCompile written: Compile end-to-end tests automatically before testrun
- Output folder now configurable via "-d desiredDir" for both the JUnit test and main method / run configurations
- Fixed bug that for some IllegalFlowExcpetion, even though no involved variable was given, the test still passed
- wrote readme.md with setup instructions, code overview and most important command line commands
- some testclasses need to be rewritten (about 10): Some are incomplete, some do not provide the desired information leak, some are empty, some miss involved variables
-- added involvedVars to "ArithmeticExpressionsFail"
-- Rewrote ArrayRef: Split up in two files (*Fail, *Success), made sure desired information leak is present/not present
-- Fixed IfStmt test: Split it up, supplied illegal flow in *Fail, supplied appropriate variable.
- documented which tests fail, and why. also fixed some tests.


-- Todo: write external classes test using hand-instrumented external class. check and fix other tests.

# Questions: 
- AssignmentLevel ==(?) seucirtyLevel? Global and Local PC?!
- Is level.low() == level.bottom() ? My problem: Paper says no, IfStmtSuccess (or Nico.class) test says yes

week 3:


m(int i) {
	int b0;
	if(i > 0) {
		b0 = i;
	}
}

wir haben: localmap(bo) = Low, aber lpc = high. Ist error!
Wollen aber: localmap(b0) = ?, und lpc = high.

alternativ: b0 nicht aus lokalmap.

für b0 sollte nur setLocal aufgerufen werden in assignArgumentToLocal oder in
setLevelOfLocal, nicht aber in addLocal

betrachte alle aufrufe von "getLevel"

Im Moment: Haben localmap: String -> SecurityLevel
Wollen eig: String -> Level ODER uninititalised
	könnte level + uninit zusammenfassen als: PossibleLevel.

PossibleLevel hat privates bool initialised.
Dann methode: GetLevel: {if initialized, then ..; else throw}
und methode: isInitialised() { return initialised; }

Also mit neuer Klasse ist das besser!!

NOTES, week 3:
- check if illegal flow (via local-sec-value > localPC) is contained in
	setLevelOfLocal method. I find this confusing, and not adhering to
	the seperation of concerns
- global PC, only one, propagated down, reset after
	method is done
- local PC, implemented as a stack, used to different-
	iate between different ifs
	
Questions:
- what are objectmac.actualArgumentsLevel
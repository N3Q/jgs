public static class analysisSuccess.SuccessObject$StaticMethodObject extends java.lang.Object
{

    public static int returnLowSecurity()
    {
        java.lang.Integer temp$1, temp$3;
        java.lang.Object temp$2;
        int temp$4;

        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object lowId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        temp$4 = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();
        return temp$4;
    }

    public static int returnHighSecurity()
    {
        java.lang.Integer temp$1, temp$3;
        java.lang.Object temp$2;
        int temp$4;

        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object highId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        temp$4 = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();
        return temp$4;
    }

    public static int returnLowSecurity(int)
    {
        int low;

        low := @parameter0: int;
        return low;
    }

    public static int returnHighSecurity(int)
    {
        int high;

        high := @parameter0: int;
        return high;
    }

    public void <init>()
    {
        analysisSuccess.SuccessObject$StaticMethodObject this;

        this := @this: analysisSuccess.SuccessObject$StaticMethodObject;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    static void <clinit>()
    {
        return;
    }
}

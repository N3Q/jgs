public class analysisSuccess.SuccessField extends java.lang.Object
{
    public int low;
    public int high;

    public static void main(java.lang.String[])
    {
        java.lang.String[] args;

        args := @parameter0: java.lang.String[];
        return;
    }

    public void <init>()
    {
        analysisSuccess.SuccessField this;

        this := @this: analysisSuccess.SuccessField;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<analysisSuccess.SuccessField: int low> = 42;
        this.<analysisSuccess.SuccessField: int high> = 42;
        return;
    }

    public int returnLowSecurity()
    {
        analysisSuccess.SuccessField this;
        int temp$0;

        this := @this: analysisSuccess.SuccessField;
        temp$0 = this.<analysisSuccess.SuccessField: int low>;
        return temp$0;
    }

    public int returnLowSecurity2()
    {
        analysisSuccess.SuccessField this;
        int low2;

        this := @this: analysisSuccess.SuccessField;
        low2 = this.<analysisSuccess.SuccessField: int low>;
        return low2;
    }

    public int returnHighSecurity()
    {
        analysisSuccess.SuccessField this;
        int temp$0;

        this := @this: analysisSuccess.SuccessField;
        temp$0 = this.<analysisSuccess.SuccessField: int high>;
        return temp$0;
    }

    public int returnHighSecurity2()
    {
        analysisSuccess.SuccessField this;
        int high2;

        this := @this: analysisSuccess.SuccessField;
        high2 = this.<analysisSuccess.SuccessField: int high>;
        return high2;
    }

    public void assignLowSecurity()
    {
        analysisSuccess.SuccessField this;
        int low2;
        java.lang.Integer temp$1, temp$3;
        java.lang.Object temp$2;

        this := @this: analysisSuccess.SuccessField;
        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object lowId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        low2 = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();
        this.<analysisSuccess.SuccessField: int low> = low2;
        return;
    }

    public void assignHighSecurity()
    {
        analysisSuccess.SuccessField this;
        int low;
        java.lang.Integer temp$1, temp$3;
        java.lang.Object temp$2;

        this := @this: analysisSuccess.SuccessField;
        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object lowId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        low = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();
        this.<analysisSuccess.SuccessField: int high> = low;
        return;
    }

    public void assignHigh2Security()
    {
        analysisSuccess.SuccessField this;
        int high2;
        java.lang.Integer temp$1, temp$3;
        java.lang.Object temp$2;

        this := @this: analysisSuccess.SuccessField;
        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object highId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        high2 = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();
        this.<analysisSuccess.SuccessField: int high> = high2;
        return;
    }

    static void <clinit>()
    {
        return;
    }
}

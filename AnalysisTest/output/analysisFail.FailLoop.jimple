public class analysisFail.FailLoop extends java.lang.Object
{
    int lowField;
    int highField;

    public static void main(java.lang.String[])
    {
        java.lang.String[] args;

        args := @parameter0: java.lang.String[];
        return;
    }

    public void forLoopField2(int)
    {
        analysisFail.FailLoop this;
        int arg1High, i, temp$4, temp$6;
        java.lang.Integer temp$1, temp$3;
        java.lang.Object temp$2;

        this := @this: analysisFail.FailLoop;
        arg1High := @parameter0: int;
        i = 0;

     label0:
        if i < arg1High goto label1;

        goto label2;

     label1:
        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object lowId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        temp$4 = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();
        this.<analysisFail.FailLoop: int highField> = temp$4;
        temp$6 = i + 1;
        i = temp$6;
        goto label0;

     label2:
        return;
    }

    public void forLoopField3(int)
    {
        analysisFail.FailLoop this;
        int arg1High, i, temp$4, temp$6;
        java.lang.Integer temp$1, temp$3;
        java.lang.Object temp$2;

        this := @this: analysisFail.FailLoop;
        arg1High := @parameter0: int;
        i = 0;

     label0:
        if i < arg1High goto label1;

        goto label2;

     label1:
        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object highId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        temp$4 = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();
        this.<analysisFail.FailLoop: int lowField> = temp$4;
        temp$6 = i + 1;
        i = temp$6;
        goto label0;

     label2:
        return;
    }

    public void forLoopField4(int)
    {
        analysisFail.FailLoop this;
        int arg1High, i, temp$4, temp$6;
        java.lang.Integer temp$1, temp$3;
        java.lang.Object temp$2;

        this := @this: analysisFail.FailLoop;
        arg1High := @parameter0: int;
        i = 0;

     label0:
        if i < arg1High goto label1;

        goto label2;

     label1:
        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object lowId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        temp$4 = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();
        this.<analysisFail.FailLoop: int lowField> = temp$4;
        temp$6 = i + 1;
        i = temp$6;
        goto label0;

     label2:
        return;
    }

    public void forLoopField7(int)
    {
        analysisFail.FailLoop this;
        int arg1Low, i, temp$4, temp$6;
        java.lang.Integer temp$1, temp$3;
        java.lang.Object temp$2;

        this := @this: analysisFail.FailLoop;
        arg1Low := @parameter0: int;
        i = 0;

     label0:
        if i < arg1Low goto label1;

        goto label2;

     label1:
        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object highId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        temp$4 = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();
        this.<analysisFail.FailLoop: int lowField> = temp$4;
        temp$6 = i + 1;
        i = temp$6;
        goto label0;

     label2:
        return;
    }

    public int forLoopLocal2(int)
    {
        analysisFail.FailLoop this;
        int arg1High, var1High, i, temp$8, temp$10;
        java.lang.Integer temp$1, temp$3, temp$5, temp$7;
        java.lang.Object temp$2, temp$6;

        this := @this: analysisFail.FailLoop;
        arg1High := @parameter0: int;
        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object highId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        var1High = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();
        i = 0;

     label0:
        if i < arg1High goto label1;

        goto label2;

     label1:
        temp$5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$6 = staticinvoke <security.SootSecurityLevel: java.lang.Object lowId(java.lang.Object)>(temp$5);
        temp$7 = (java.lang.Integer) temp$6;
        temp$8 = virtualinvoke temp$7.<java.lang.Integer: int intValue()>();
        var1High = temp$8;
        temp$10 = i + 1;
        i = temp$10;
        goto label0;

     label2:
        return var1High;
    }

    public int forLoopLocal4(int)
    {
        analysisFail.FailLoop this;
        int arg1High, var1Low, i, temp$8, temp$10;
        java.lang.Integer temp$1, temp$3, temp$5, temp$7;
        java.lang.Object temp$2, temp$6;

        this := @this: analysisFail.FailLoop;
        arg1High := @parameter0: int;
        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object lowId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        var1Low = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();
        i = 0;

     label0:
        if i < arg1High goto label1;

        goto label2;

     label1:
        temp$5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$6 = staticinvoke <security.SootSecurityLevel: java.lang.Object lowId(java.lang.Object)>(temp$5);
        temp$7 = (java.lang.Integer) temp$6;
        temp$8 = virtualinvoke temp$7.<java.lang.Integer: int intValue()>();
        var1Low = temp$8;
        temp$10 = i + 1;
        i = temp$10;
        goto label0;

     label2:
        return var1Low;
    }

    public int forLoopLocal9(int)
    {
        analysisFail.FailLoop this;
        int arg1High, var1High, i, temp$8, temp$10;
        java.lang.Integer temp$1, temp$3, temp$5, temp$7;
        java.lang.Object temp$2, temp$6;

        this := @this: analysisFail.FailLoop;
        arg1High := @parameter0: int;
        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object highId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        var1High = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();
        i = 0;

     label0:
        if i < arg1High goto label1;

        goto label2;

     label1:
        temp$5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$6 = staticinvoke <security.SootSecurityLevel: java.lang.Object highId(java.lang.Object)>(temp$5);
        temp$7 = (java.lang.Integer) temp$6;
        temp$8 = virtualinvoke temp$7.<java.lang.Integer: int intValue()>();
        var1High = temp$8;
        temp$10 = i + 1;
        i = temp$10;
        goto label0;

     label2:
        return var1High;
    }

    public int forLoopLocal10(int)
    {
        analysisFail.FailLoop this;
        int arg1High, var1High, i, temp$8, temp$10;
        java.lang.Integer temp$1, temp$3, temp$5, temp$7;
        java.lang.Object temp$2, temp$6;

        this := @this: analysisFail.FailLoop;
        arg1High := @parameter0: int;
        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object highId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        var1High = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();
        i = 0;

     label0:
        if i < arg1High goto label1;

        goto label2;

     label1:
        temp$5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$6 = staticinvoke <security.SootSecurityLevel: java.lang.Object lowId(java.lang.Object)>(temp$5);
        temp$7 = (java.lang.Integer) temp$6;
        temp$8 = virtualinvoke temp$7.<java.lang.Integer: int intValue()>();
        var1High = temp$8;
        temp$10 = i + 1;
        i = temp$10;
        goto label0;

     label2:
        return var1High;
    }

    public int forLoopLocal11(int)
    {
        analysisFail.FailLoop this;
        int arg1High, var1Low, i, temp$8, temp$10;
        java.lang.Integer temp$1, temp$3, temp$5, temp$7;
        java.lang.Object temp$2, temp$6;

        this := @this: analysisFail.FailLoop;
        arg1High := @parameter0: int;
        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object lowId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        var1Low = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();
        i = 0;

     label0:
        if i < arg1High goto label1;

        goto label2;

     label1:
        temp$5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$6 = staticinvoke <security.SootSecurityLevel: java.lang.Object highId(java.lang.Object)>(temp$5);
        temp$7 = (java.lang.Integer) temp$6;
        temp$8 = virtualinvoke temp$7.<java.lang.Integer: int intValue()>();
        var1Low = temp$8;
        temp$10 = i + 1;
        i = temp$10;
        goto label0;

     label2:
        return var1Low;
    }

    public int forLoopLocal12(int)
    {
        analysisFail.FailLoop this;
        int arg1High, var1Low, i, temp$8, temp$10;
        java.lang.Integer temp$1, temp$3, temp$5, temp$7;
        java.lang.Object temp$2, temp$6;

        this := @this: analysisFail.FailLoop;
        arg1High := @parameter0: int;
        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object lowId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        var1Low = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();
        i = 0;

     label0:
        if i < arg1High goto label1;

        goto label2;

     label1:
        temp$5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$6 = staticinvoke <security.SootSecurityLevel: java.lang.Object lowId(java.lang.Object)>(temp$5);
        temp$7 = (java.lang.Integer) temp$6;
        temp$8 = virtualinvoke temp$7.<java.lang.Integer: int intValue()>();
        var1Low = temp$8;
        temp$10 = i + 1;
        i = temp$10;
        goto label0;

     label2:
        return var1Low;
    }

    public int forLoopLocal13(int)
    {
        analysisFail.FailLoop this;
        int arg1Low, var1High, i, temp$8, temp$10;
        java.lang.Integer temp$1, temp$3, temp$5, temp$7;
        java.lang.Object temp$2, temp$6;

        this := @this: analysisFail.FailLoop;
        arg1Low := @parameter0: int;
        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object highId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        var1High = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();
        i = 0;

     label0:
        if i < arg1Low goto label1;

        goto label2;

     label1:
        temp$5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$6 = staticinvoke <security.SootSecurityLevel: java.lang.Object highId(java.lang.Object)>(temp$5);
        temp$7 = (java.lang.Integer) temp$6;
        temp$8 = virtualinvoke temp$7.<java.lang.Integer: int intValue()>();
        var1High = temp$8;
        temp$10 = i + 1;
        i = temp$10;
        goto label0;

     label2:
        return var1High;
    }

    public int forLoopLocal14(int)
    {
        analysisFail.FailLoop this;
        int arg1Low, var1High, i, temp$8, temp$10;
        java.lang.Integer temp$1, temp$3, temp$5, temp$7;
        java.lang.Object temp$2, temp$6;

        this := @this: analysisFail.FailLoop;
        arg1Low := @parameter0: int;
        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object highId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        var1High = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();
        i = 0;

     label0:
        if i < arg1Low goto label1;

        goto label2;

     label1:
        temp$5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$6 = staticinvoke <security.SootSecurityLevel: java.lang.Object lowId(java.lang.Object)>(temp$5);
        temp$7 = (java.lang.Integer) temp$6;
        temp$8 = virtualinvoke temp$7.<java.lang.Integer: int intValue()>();
        var1High = temp$8;
        temp$10 = i + 1;
        i = temp$10;
        goto label0;

     label2:
        return var1High;
    }

    public int forLoopLocal15(int)
    {
        analysisFail.FailLoop this;
        int arg1Low, var1Low, i, temp$8, temp$10;
        java.lang.Integer temp$1, temp$3, temp$5, temp$7;
        java.lang.Object temp$2, temp$6;

        this := @this: analysisFail.FailLoop;
        arg1Low := @parameter0: int;
        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object lowId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        var1Low = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();
        i = 0;

     label0:
        if i < arg1Low goto label1;

        goto label2;

     label1:
        temp$5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$6 = staticinvoke <security.SootSecurityLevel: java.lang.Object highId(java.lang.Object)>(temp$5);
        temp$7 = (java.lang.Integer) temp$6;
        temp$8 = virtualinvoke temp$7.<java.lang.Integer: int intValue()>();
        var1Low = temp$8;
        temp$10 = i + 1;
        i = temp$10;
        goto label0;

     label2:
        return var1Low;
    }

    public void whileLoopField5(int)
    {
        analysisFail.FailLoop this;
        int arg1High, var1High, temp$4, temp$5;
        java.lang.Integer temp$1, temp$3;
        java.lang.Object temp$2;

        this := @this: analysisFail.FailLoop;
        arg1High := @parameter0: int;
        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object highId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        var1High = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();

     label0:
        if var1High < arg1High goto label1;

        goto label2;

     label1:
        temp$4 = var1High;
        temp$5 = var1High + 1;
        var1High = temp$5;
        this.<analysisFail.FailLoop: int lowField> = temp$4;
        goto label0;

     label2:
        return;
    }

    public void whileLoopField6(int)
    {
        analysisFail.FailLoop this;
        int arg1High, var1Low, temp$4, temp$5;
        java.lang.Integer temp$1, temp$3;
        java.lang.Object temp$2;

        this := @this: analysisFail.FailLoop;
        arg1High := @parameter0: int;
        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object lowId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        var1Low = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();

     label0:
        if var1Low < arg1High goto label1;

        goto label2;

     label1:
        temp$4 = var1Low;
        temp$5 = var1Low + 1;
        var1Low = temp$5;
        this.<analysisFail.FailLoop: int lowField> = temp$4;
        goto label0;

     label2:
        return;
    }

    public void whileLoopField7(int)
    {
        analysisFail.FailLoop this;
        int arg1High, var1High, temp$4, temp$5;
        java.lang.Integer temp$1, temp$3;
        java.lang.Object temp$2;

        this := @this: analysisFail.FailLoop;
        arg1High := @parameter0: int;
        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object highId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        var1High = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();

     label0:
        if var1High < arg1High goto label1;

        goto label2;

     label1:
        temp$4 = var1High;
        temp$5 = var1High + 1;
        var1High = temp$5;
        this.<analysisFail.FailLoop: int lowField> = temp$4;
        goto label0;

     label2:
        return;
    }

    public void whileLoopField8(int)
    {
        analysisFail.FailLoop this;
        int arg1High, var1Low, temp$4, temp$5;
        java.lang.Integer temp$1, temp$3;
        java.lang.Object temp$2;

        this := @this: analysisFail.FailLoop;
        arg1High := @parameter0: int;
        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object lowId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        var1Low = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();

     label0:
        if var1Low < arg1High goto label1;

        goto label2;

     label1:
        temp$4 = var1Low;
        temp$5 = var1Low + 1;
        var1Low = temp$5;
        this.<analysisFail.FailLoop: int lowField> = temp$4;
        goto label0;

     label2:
        return;
    }

    public void whileLoopField13(int)
    {
        analysisFail.FailLoop this;
        int arg1Low, var1High, temp$4, temp$5;
        java.lang.Integer temp$1, temp$3;
        java.lang.Object temp$2;

        this := @this: analysisFail.FailLoop;
        arg1Low := @parameter0: int;
        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object highId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        var1High = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();

     label0:
        if var1High < arg1Low goto label1;

        goto label2;

     label1:
        temp$4 = var1High;
        temp$5 = var1High + 1;
        var1High = temp$5;
        this.<analysisFail.FailLoop: int lowField> = temp$4;
        goto label0;

     label2:
        return;
    }

    public void whileLoopField15(int)
    {
        analysisFail.FailLoop this;
        int arg1Low, var1High, temp$4, temp$5;
        java.lang.Integer temp$1, temp$3;
        java.lang.Object temp$2;

        this := @this: analysisFail.FailLoop;
        arg1Low := @parameter0: int;
        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object highId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        var1High = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();

     label0:
        if var1High < arg1Low goto label1;

        goto label2;

     label1:
        temp$4 = var1High;
        temp$5 = var1High + 1;
        var1High = temp$5;
        this.<analysisFail.FailLoop: int lowField> = temp$4;
        goto label0;

     label2:
        return;
    }

    public int whileLoopLocal9(int)
    {
        analysisFail.FailLoop this;
        int arg1High, var1High, temp$4;
        java.lang.Integer temp$1, temp$3;
        java.lang.Object temp$2;

        this := @this: analysisFail.FailLoop;
        arg1High := @parameter0: int;
        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object highId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        var1High = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();

     label0:
        if var1High < arg1High goto label1;

        goto label2;

     label1:
        temp$4 = var1High;
        var1High = temp$4;
        goto label0;

     label2:
        return var1High;
    }

    public int whileLoopLocal10(int)
    {
        analysisFail.FailLoop this;
        int arg1High, var1High, temp$4;
        java.lang.Integer temp$1, temp$3;
        java.lang.Object temp$2;

        this := @this: analysisFail.FailLoop;
        arg1High := @parameter0: int;
        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object highId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        var1High = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();

     label0:
        if var1High < arg1High goto label1;

        goto label2;

     label1:
        temp$4 = var1High;
        var1High = temp$4;
        goto label0;

     label2:
        return var1High;
    }

    public int whileLoopLocal11(int)
    {
        analysisFail.FailLoop this;
        int arg1High, var1Low, temp$4;
        java.lang.Integer temp$1, temp$3;
        java.lang.Object temp$2;

        this := @this: analysisFail.FailLoop;
        arg1High := @parameter0: int;
        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object lowId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        var1Low = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();

     label0:
        if var1Low < arg1High goto label1;

        goto label2;

     label1:
        temp$4 = var1Low;
        var1Low = temp$4;
        goto label0;

     label2:
        return var1Low;
    }

    public int whileLoopLocal12(int)
    {
        analysisFail.FailLoop this;
        int arg1High, var1Low, temp$4;
        java.lang.Integer temp$1, temp$3;
        java.lang.Object temp$2;

        this := @this: analysisFail.FailLoop;
        arg1High := @parameter0: int;
        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object lowId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        var1Low = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();

     label0:
        if var1Low < arg1High goto label1;

        goto label2;

     label1:
        temp$4 = var1Low;
        var1Low = temp$4;
        goto label0;

     label2:
        return var1Low;
    }

    public int whileLoopLocal13(int)
    {
        analysisFail.FailLoop this;
        int arg1Low, var1High, temp$4;
        java.lang.Integer temp$1, temp$3;
        java.lang.Object temp$2;

        this := @this: analysisFail.FailLoop;
        arg1Low := @parameter0: int;
        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object highId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        var1High = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();

     label0:
        if var1High < arg1Low goto label1;

        goto label2;

     label1:
        temp$4 = var1High;
        var1High = temp$4;
        goto label0;

     label2:
        return var1High;
    }

    public int whileLoopLocal14(int)
    {
        analysisFail.FailLoop this;
        int arg1Low, var1High, temp$4;
        java.lang.Integer temp$1, temp$3;
        java.lang.Object temp$2;

        this := @this: analysisFail.FailLoop;
        arg1Low := @parameter0: int;
        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object highId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        var1High = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();

     label0:
        if var1High < arg1Low goto label1;

        goto label2;

     label1:
        temp$4 = var1High;
        var1High = temp$4;
        goto label0;

     label2:
        return var1High;
    }

    public void forLoopIfField2(int, boolean)
    {
        analysisFail.FailLoop this;
        int arg1High, i, temp$4, temp$6;
        boolean arg2High;
        java.lang.Integer temp$1, temp$3;
        java.lang.Object temp$2;

        this := @this: analysisFail.FailLoop;
        arg1High := @parameter0: int;
        arg2High := @parameter1: boolean;
        i = 0;

     label0:
        if i < arg1High goto label1;

        goto label3;

     label1:
        if arg2High == 0 goto label2;

        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object lowId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        temp$4 = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();
        this.<analysisFail.FailLoop: int highField> = temp$4;

     label2:
        temp$6 = i + 1;
        i = temp$6;
        goto label0;

     label3:
        return;
    }

    public void forLoopIfField3(int, boolean)
    {
        analysisFail.FailLoop this;
        int arg1High, i, temp$4, temp$6;
        boolean arg2High;
        java.lang.Integer temp$1, temp$3;
        java.lang.Object temp$2;

        this := @this: analysisFail.FailLoop;
        arg1High := @parameter0: int;
        arg2High := @parameter1: boolean;
        i = 0;

     label0:
        if i < arg1High goto label1;

        goto label3;

     label1:
        if arg2High == 0 goto label2;

        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object highId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        temp$4 = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();
        this.<analysisFail.FailLoop: int lowField> = temp$4;

     label2:
        temp$6 = i + 1;
        i = temp$6;
        goto label0;

     label3:
        return;
    }

    public void forLoopIfField4(int, boolean)
    {
        analysisFail.FailLoop this;
        int arg1High, i, temp$4, temp$6;
        boolean arg2High;
        java.lang.Integer temp$1, temp$3;
        java.lang.Object temp$2;

        this := @this: analysisFail.FailLoop;
        arg1High := @parameter0: int;
        arg2High := @parameter1: boolean;
        i = 0;

     label0:
        if i < arg1High goto label1;

        goto label3;

     label1:
        if arg2High == 0 goto label2;

        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object lowId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        temp$4 = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();
        this.<analysisFail.FailLoop: int lowField> = temp$4;

     label2:
        temp$6 = i + 1;
        i = temp$6;
        goto label0;

     label3:
        return;
    }

    public void forLoopIfField6(int, boolean)
    {
        analysisFail.FailLoop this;
        int arg1High, i, temp$4, temp$6;
        boolean arg2Low;
        java.lang.Integer temp$1, temp$3;
        java.lang.Object temp$2;

        this := @this: analysisFail.FailLoop;
        arg1High := @parameter0: int;
        arg2Low := @parameter1: boolean;
        i = 0;

     label0:
        if i < arg1High goto label1;

        goto label3;

     label1:
        if arg2Low == 0 goto label2;

        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object lowId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        temp$4 = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();
        this.<analysisFail.FailLoop: int highField> = temp$4;

     label2:
        temp$6 = i + 1;
        i = temp$6;
        goto label0;

     label3:
        return;
    }

    public void forLoopIfField7(int, boolean)
    {
        analysisFail.FailLoop this;
        int arg1High, i, temp$4, temp$6;
        boolean arg2Low;
        java.lang.Integer temp$1, temp$3;
        java.lang.Object temp$2;

        this := @this: analysisFail.FailLoop;
        arg1High := @parameter0: int;
        arg2Low := @parameter1: boolean;
        i = 0;

     label0:
        if i < arg1High goto label1;

        goto label3;

     label1:
        if arg2Low == 0 goto label2;

        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object highId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        temp$4 = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();
        this.<analysisFail.FailLoop: int lowField> = temp$4;

     label2:
        temp$6 = i + 1;
        i = temp$6;
        goto label0;

     label3:
        return;
    }

    public void forLoopIfField8(int, boolean)
    {
        analysisFail.FailLoop this;
        int arg1High, i, temp$4, temp$6;
        boolean arg2Low;
        java.lang.Integer temp$1, temp$3;
        java.lang.Object temp$2;

        this := @this: analysisFail.FailLoop;
        arg1High := @parameter0: int;
        arg2Low := @parameter1: boolean;
        i = 0;

     label0:
        if i < arg1High goto label1;

        goto label3;

     label1:
        if arg2Low == 0 goto label2;

        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object lowId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        temp$4 = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();
        this.<analysisFail.FailLoop: int lowField> = temp$4;

     label2:
        temp$6 = i + 1;
        i = temp$6;
        goto label0;

     label3:
        return;
    }

    public void forLoopIfField11(int, boolean)
    {
        analysisFail.FailLoop this;
        int arg1Low, i, temp$4, temp$6;
        boolean arg2High;
        java.lang.Integer temp$1, temp$3;
        java.lang.Object temp$2;

        this := @this: analysisFail.FailLoop;
        arg1Low := @parameter0: int;
        arg2High := @parameter1: boolean;
        i = 0;

     label0:
        if i < arg1Low goto label1;

        goto label3;

     label1:
        if arg2High == 0 goto label2;

        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object highId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        temp$4 = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();
        this.<analysisFail.FailLoop: int lowField> = temp$4;

     label2:
        temp$6 = i + 1;
        i = temp$6;
        goto label0;

     label3:
        return;
    }

    public void forLoopIfField12(int, boolean)
    {
        analysisFail.FailLoop this;
        int arg1Low, i, temp$4, temp$6;
        boolean arg2High;
        java.lang.Integer temp$1, temp$3;
        java.lang.Object temp$2;

        this := @this: analysisFail.FailLoop;
        arg1Low := @parameter0: int;
        arg2High := @parameter1: boolean;
        i = 0;

     label0:
        if i < arg1Low goto label1;

        goto label3;

     label1:
        if arg2High == 0 goto label2;

        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object lowId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        temp$4 = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();
        this.<analysisFail.FailLoop: int lowField> = temp$4;

     label2:
        temp$6 = i + 1;
        i = temp$6;
        goto label0;

     label3:
        return;
    }

    public void forLoopIfField10(int, boolean)
    {
        analysisFail.FailLoop this;
        int arg1Low, i, temp$4, temp$6;
        boolean arg2High;
        java.lang.Integer temp$1, temp$3;
        java.lang.Object temp$2;

        this := @this: analysisFail.FailLoop;
        arg1Low := @parameter0: int;
        arg2High := @parameter1: boolean;
        i = 0;

     label0:
        if i < arg1Low goto label1;

        goto label3;

     label1:
        if arg2High == 0 goto label2;

        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object lowId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        temp$4 = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();
        this.<analysisFail.FailLoop: int highField> = temp$4;

     label2:
        temp$6 = i + 1;
        i = temp$6;
        goto label0;

     label3:
        return;
    }

    public void forLoopIfField15(int, boolean)
    {
        analysisFail.FailLoop this;
        int arg1Low, i, temp$4, temp$6;
        boolean arg2Low;
        java.lang.Integer temp$1, temp$3;
        java.lang.Object temp$2;

        this := @this: analysisFail.FailLoop;
        arg1Low := @parameter0: int;
        arg2Low := @parameter1: boolean;
        i = 0;

     label0:
        if i < arg1Low goto label1;

        goto label3;

     label1:
        if arg2Low == 0 goto label2;

        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object highId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        temp$4 = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();
        this.<analysisFail.FailLoop: int lowField> = temp$4;

     label2:
        temp$6 = i + 1;
        i = temp$6;
        goto label0;

     label3:
        return;
    }

    public void <init>()
    {
        analysisFail.FailLoop this;
        java.lang.Integer temp$1, temp$3, temp$6, temp$8;
        java.lang.Object temp$2, temp$7;
        int temp$4, temp$9;

        this := @this: analysisFail.FailLoop;
        specialinvoke this.<java.lang.Object: void <init>()>();
        temp$1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$2 = staticinvoke <security.SootSecurityLevel: java.lang.Object lowId(java.lang.Object)>(temp$1);
        temp$3 = (java.lang.Integer) temp$2;
        temp$4 = virtualinvoke temp$3.<java.lang.Integer: int intValue()>();
        this.<analysisFail.FailLoop: int lowField> = temp$4;
        temp$6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
        temp$7 = staticinvoke <security.SootSecurityLevel: java.lang.Object highId(java.lang.Object)>(temp$6);
        temp$8 = (java.lang.Integer) temp$7;
        temp$9 = virtualinvoke temp$8.<java.lang.Integer: int intValue()>();
        this.<analysisFail.FailLoop: int highField> = temp$9;
        return;
    }

    static void <clinit>()
    {
        return;
    }
}

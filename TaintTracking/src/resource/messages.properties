
effects.cause.array_assign         = assignment to the array '%s'
effects.cause.field_assign         = assignment to the field '%s'
effects.cause.field_reference      = reference to the field '%s'
effects.cause.inherit_class        = effect annotations of the class '%s'
effects.cause.inherit_method       = effect annotations of the method '%s' or the invocation of this method
effects.cause.instantiation        = instantiation of a new object with type %s
effects.class.non_existent         = The class '%s' provides no write effect annotation.
effects.class.none                 = The class '%s' has no write effects, thus this is a less serious effect as the most serious effect '%s' of subclass '%s'.
effects.class.super_library        = Can't check whether the inheritance of the subclass '%s' to the superclass '%s' is valid because latter is a library class.
effects.class.super_stronger       = The the most serious write effect '%s' of class '%s' is less serious as the most serious effect '%s' of super class '%s'.
effects.error.method.missing       = In method '%s' a write effect to '%s' occurs caused by %s, which is non-existent in the annotation.
effects.method.overriden_library   = Can't check whether the inheritance of the method '%s' to the overridden method '%s' is valid because latter is a library method.
effects.program_counter.stronger   = In method '%s' at source line %d a write effect to '%s' inside of a '%s' branch.
effects.warning.method.superfluous = At method '%s' a write effect to '%s' is maybe superfluous.

exception.analysis.level.no_update                         = The local '%s' in method '%s' at source line %d couldn't be updated to the level '%s', because this local is unknown.
exception.analysis.level.not_found                         = The inspected value at source line %d in method '%s' has no security level.
exception.analysis.other.error_env                         = The analysis can not create the extended environment for the analysis of the method '%s', because of an error.
exception.analysis.other.error_switch                      = An exception was thrown during processing the statement '%s' in method '%s' at source line %d.
exception.analysis.switch.not_implemented                  = The statement '%s' at line %d invokes the '%s' case in the %s [NOT IMPLEMENTED].
exception.analysis.switch.unknown_object                   = Unknown object '%s' for the switch '%s' in the analysis.
exception.analysis.switch.update_error                     = The switch '%s' can't update the security level of %s '%s' at source line %d.
exception.analysis_type.unknown                            = The type of the analysis is unknown (%s).
exception.annotation.extract_class_constraints_error       = An error occurred during the extraction of the constraints for class '%s'.
exception.annotation.extract_class_effects_error           = An error occurred during the extraction of the write effects for class '%s'.
exception.annotation.extract_field_level_error             = An error occurred during the extraction of the field level for field '%s'.
exception.annotation.extract_method_constraints_error      = An error occurred during the extraction of the constraints for method '%s'.
exception.annotation.extract_method_effects_error          = An error occurred during the extraction of the write effects for method '%s'.
exception.annotation.extract_method_parameter_error        = An error occurred during the extraction of the parameter levels for method '%s'.
exception.annotation.extract_method_return_error           = An error occurred during the extraction of the return level for method '%s'.
exception.annotation.invalid_annotation_type               = The specified annotation type '%s' does not match the type of the inner annotation provided by the outer annotation.
exception.annotation.invalid_enum_type                     = The specified enumeration '%s' does not match the type of the enumeration provided by the annotation.
exception.annotation.no_such_array                         = The annotation data access object does not have an array for name '%s' and kind '%c%c'.
exception.annotation.no_visibility_tag                     = The specified host doesn't have a VisibilityAnnotationTag.
exception.annotation.not_found_class                       = The class '%s' which is used in the annotations does not exist in the class path.
exception.annotation.tag_not_found                         = The specified VisibilityAnnotationTag does not contain an annotation with the specified type '%s'.
exception.arguments.invalid                                = The specified arguments are invalid (%s). Please read the documentation to discover which arguments are required.
exception.constraints.class_invalid_level                  = The security level '%s' which is contained by the constraints of the class '%s' is an invalid security level.
exception.constraints.class_no_pc_ref                      = The constraints of class '%s' does not contain a program counter reference. 
exception.constraints.invalid_param_ref                    = The constraints of method '%s' contains an invalid parameter reference '%s'.
exception.constraints.invalid_return_ref                   = The constraints of method '%s' contains an invalid return reference '%s'. 
exception.constraints.method_invalid_level                 = The security level '%s' which is contained by the constraints of the method '%s' is an invalid security level.
exception.constraints.method_no_pc_ref                     = The constraints of method '%s' does not contain a program counter reference.
exception.constraints.no_param_ref                         = The constraints of method '%s' does not contain a reference to the parameter at position %d.
exception.constraints.no_return_ref                        = For the method '%s' doesn't exist a return reference in the constraints.
exception.constraints.param_ref                            = The constraints of class '%s' does contain an invalid reference to a parameter.
exception.constraints.return_ref                           = The constraints of class '%s' does contain an invalid return reference.
exception.constraints.unknown_type                         = The type of the constraints '%s' is unknown and thus not implemented. 
exception.constraints.void_method                          = The constraints of the void method '%s' contains one or more return references.
exception.def_class.annotation.invalid_class               = The definition class is invalid: the specified annotation class '%s' is not an java annotation class ('@interface').
exception.def_class.annotation.invalid_declaration         = The definition class is invalid: the annotation class '%s' should be declared in the definition class.
exception.def_class.annotation.invalid_element_type        = The definition class is invalid: the annotation class '%s' is not allowed at elements of the type '%s'.
exception.def_class.annotation.invalid_package             = The definition class is invalid: the annotation class '%s' should be declared in the package '%s'.
exception.def_class.annotation.missing_annotation          = The definition class is invalid: the annotation class '%s' itself requires the annotation '%s'.
exception.def_class.annotation.missing_element_type        = The definition class is invalid: the annotation class '%s' should be allowed at elements of the type '%s'.
exception.def_class.annotation.no_class                    = The definition class is invalid: no annotation class was specified for %s.
exception.def_class.annotation.visibility_invalid          = The definition class is invalid: the annotation class '%s' should have the visibility '%s'.
exception.def_class.class.invalid_name                     = The definition class is invalid: the name of the definition class is not '%s'.
exception.def_class.level.invalid_char                     = The definition class is invalid: the name of the security level '%s' contains one or more invalid special characters.
exception.def_class.level_func.error_constraint_conversion = The definition class is invalid: error during the extraction of the constraints at level-function '%s'.
exception.def_class.level_func.error_level_conversion      = The definition class is invalid: error during the extraction of the level(s) for %s at level-function '%s'.
exception.def_class.level_func.invalid_constraints         = The definition class is invalid: the constraints of level-function '%s' are not valid.
exception.def_class.level_func.invalid_parameter_levels    = The definition class is invalid: the parameter levels of level-function '%s' is not valid.
exception.def_class.level_func.invalid_return_level        = The definition class is invalid: the return level of level-function '%s' is not valid.
exception.def_class.level_func.missing_annotation          = The definition class is invalid: the level-function '%s' is not annotated with the return level, the parameter levels and/or the constraints annotation.
exception.def_class.level_func.no_access                   = The definition class is invalid: the definition class is invalid: couldn't access the level-function '%s' in the definition class.
exception.def_class.level_func.none                        = The definition class is invalid: the level-function '%s' does not exists in the definition class.
exception.def_class.level_func.not_static                  = The definition class is invalid: the level-function '%s' is not static.
exception.def_class.methods.no_default_variable            = The definition class is invalid: it does not provide a valid level as default for variables. Please implement the method '%s' correctly.
exception.def_class.methods.no_glb                         = The definition class is invalid: it does not provide the greatest lower bound level. Please implement the method '%s' correctly.
exception.def_class.methods.no_levels                      = The definition class is invalid: it does not provide security levels. Please implement the method '%s' correctly.
exception.def_class.methods.no_lib_class_effects           = The definition class is invalid: it does not provide valid effects as default for library classes. Please implement the method '%s' correctly.
exception.def_class.methods.no_lib_field                   = The definition class is invalid: it does not provide a valid level as default for library fields. Please implement the method '%s' correctly.
exception.def_class.methods.no_lib_method_effects          = The definition class is invalid: it does not provide valid effects as default for library methods. Please implement the method '%s' correctly.
exception.def_class.methods.no_lib_parameter               = The definition class is invalid: it does not provide valid levels as default for the parameters of library methods. Please implement the method '%s' correctly.
exception.def_class.methods.no_lib_return                  = The definition class is invalid: it does not provide a valid level as default for the return value of library methods. Please implement the method '%s' correctly.
exception.def_class.methods.no_lub                         = The definition class is invalid: it does not provide the least upper bound level. Please implement the method '%s' correctly.
exception.def_class.package.invalid_name                   = The definition class is invalid: the package of the definition class is not '%s'.
exception.effects.class_invalid                            = The write effect '%s' at class '%s' is an invalid level and thus also an invalid effect.
exception.effects.method_class_invalid                     = The class write effect '%s' of method '%s' is an invalid level and thus also an invalid effect.
exception.effects.method_invalid                           = The write effect '%s' of method '%s' is an invalid level and thus also an invalid effect.
exception.environment.class_env_not_found                  = Class '%s' wasn't prepared for the analysis, i.e. the class environment doesn't exist.
exception.environment.field_env_not_found                  = Field '%s' wasn't prepared for the analysis, i.e. the field environment doesn't exist.
exception.environment.method_env_not_found                 = Method '%s' wasn't prepared for the analysis, i.e. the method environment doesn't exist.
exception.environment.method_parameter_not_found           = For method '%s' does not exist a method parameter at position %d; 
exception.extractor.class_constraints.error                = The specified constraints at method '%s' couldn't be extracted.
exception.extractor.class_constraints.no_constraints       = The class '%s' has no constraints annotation.
exception.extractor.effects.error_class                    = The specified write effects at class '%s' couldn't be extracted.
exception.extractor.effects.error_method                   = The specified write effects at method '%s' couldn't be extracted.
exception.extractor.level.field.error                      = The specified field level at field '%s' couldn't be extracted.
exception.extractor.level.field.no_level                   = The field '%s' has no field level annotation.
exception.extractor.level.parameter.error                  = The specified parameter levels at method '%s' couldn't be extracted.
exception.extractor.level.parameter.invalid                = The count of the parameter levels for method '%s' is not equal to the count of the method parameter.
exception.extractor.level.parameter.no_level               = The method '%s' has no parameter levels annotation.
exception.extractor.level.return.error                     = The specified return level for method '%s' couldn't be extracted.
exception.extractor.level.return.no_level                  = The method '%s' has no return level annotation.
exception.extractor.level.return.void                      = The method '%s' has no return value but an annotation for the return level.
exception.extractor.method_constraints.error               = The specified constraints at method '%s' couldn't be extracted.
exception.extractor.method_constraints.no_constraints      = The method '%s' has no constraints annotation.
exception.extractor.other.class_not_reasonable             = The extracted class '%s' is not reasonable.
exception.extractor.other.error_switch                     = During the extraction of the annotation an unknown object was contained in the statement '%s' of method '%s'.
exception.extractor.other.field_not_reasonable             = The extracted field '%s' is not reasonable.
exception.extractor.other.method_not_reasonable            = The extracted method '%s' is not reasonable.
exception.extractor.switch.unknown_object                  = Unknown object '%s' for the switch '%s' in the environment extractor.
exception.level.field.invalid                              = The security level '%s' of field '%s' is an invalid level.
exception.level.field.no_level                             = The field '%s' has no field security level.
exception.level.operation.empty_list_glb                   = Invalid attempt to get the greatest lower bound of an empty level list.
exception.level.operation.empty_list_lub                   = Invalid attempt to get the least upper bound of an empty level list.
exception.level.parameter.invalid                          = The parameter level '%s' of method '%s' is an invalid level.
exception.level.return.invalid                             = The return security level '%s' for the method '%s' is an invalid security level.
exception.level.return.no_level                            = For the method '%s' doesn't exist a return security level annotation. 
exception.level.return.void_method                         = For the void method '%s' exists a return security level annotation.
exception.program_counter.error                            = An error occurred in method '%s' during processing the program counter.
exception.utils.error_compiling_class                      = Can't not compile the source of class '%s'.
exception.utils.error_loading_class                        = Could not load the class '%s'. Maybe the specified class path does not contain the class file of this class.

other.constraints      = constraints of the parameters and the return value
other.field_level      = levels of a field
other.parameter_levels = parameter levels (the levels of method parameters)
other.return_level     = return levels (the level of the value which is returned by a method)
other.write_effects    = write effects of methods and classes

security.array.restrictions     = In method '%s' at source line %d a value with '%s' security level is assigned to an array field. However, because of security restrictions only assignments of values with '%s' security level are valid.
security.array.stronger_assign  = In method '%s' at source line %d a value with '%s' security level is assigned to an array which has the weaker security level '%s'.
security.array.stronger_index   = In method '%s' at source line %d occurs an assignment to a '%s' security level array with '%s' level index.
security.constraints.inequality = From line %d on in method '%s' there is an inequality '%s'.
security.constraints.missing    = On method '%s' lacks the constraint '%s'.
security.field.stronger_assign  = In method '%s' at source line %d a value with '%s' security level is assigned to the field '%s' which has the weaker security level '%s'.
security.param.stronger         = In method '%s' at source line %d the method '%s' will be invoked. For parameter '%s' a '%s' security level or weaker is expected, but the argument has a '%s' security level.
security.return.stronger        = Method '%s' returns a value with '%s' security level at source line %d. Expected was '%s' or weaker.

warning.analysis.level.weaken_local = In method '%s' at source line %d the variable '%s' was weakened from '%s' to '%s' security level.
warning.def_class.level.no_level    = Method '%s' looks like a level-function, but has no corresponding security level (this is potentially a mistake).

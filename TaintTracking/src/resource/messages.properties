
analysis.fail.creation_analyzed_method = The analysis can not create the environment for the analysis of the method '%s', thus the analysis is aborted.
analysis.fail.invalid_definition       = Invalid definition class.
analysis.fail.invalid_level_comparison = Invalid comparison of the levels in method '%s' at source line %d. At least one of the level [ %s ] is invalid.
analysis.fail.invalid_level_update     = The switch '%s' can't update the security level of %s '%s' at source line %d.
analysis.fail.invalid_param_ref        = Couldn't attach the '%s' security level to the local '%s' in method '%s' at source line %d, because the given information about method parameter '%s' doesn't match to the local information.
analysis.fail.invalid_switch_argument  = An exception was thrown during processing the statement '%s' in method '%s'.
analysis.fail.load_definition          = The specified definition class '%s' is invalid. Without a valid definition class the analysis can not proceed. (Please use the definition checker to see the violations.)
analysis.fail.local_not_found          = The local '%s' in method '%s' at source line %d couldn't be updated to the level '%s', because this local is unknown.
analysis.fail.no_level                 = In method '%s' at source line %d the value '%s' has no security level.
analysis.fail.non_void_expected        = Method '%s' is a non void method but at source line %d the method has a void return statement.
analysis.fail.unequal_parameter_amount = The invocation of method '%s' in the method '%s' at source line %d has another amount of arguments than the security level annotation for this method defines.
analysis.fail.void_expected            = The void method '%s' has at source line %d a return value with a '%s' security level.
analysis.warning.weaken_local          = In method '%s' at source line %d the variable '%s' was weakened from '%s' to '%s' security level.

annotation.invalid_annotation = The specified annotation type '%s' does not match the type of the inner annotation provided by the outer annotation.
annotation.invalid_enum       = The specified enum '%s' does not match the type of the enum provided by the annotation.
annotation.no_such_array      = Annotation does not have an array for name '%s' and kind '%c%c'.
annotation.no_such_element    = Annotation does not have an element for name '%s' and kind '%c'.
annotation.not_found_class    = The class '%s' which is used in the annontations does not exist in the class path.

checker.annotation.error_conversion         = Error during the extraction of the level(s) for %s.
checker.annotation.invalid_annotation_class = The specified annotation class '%s' is not an annotation class ('@interface').
checker.annotation.invalid_declaration      = The annotation class '%s' should be declared in the definition class.
checker.annotation.invalid_element_type     = The annotation class '%s' is not allowed at elements of the type '%s'.
checker.annotation.invalid_package          = The annotation class '%s' should be declared in the package '%s'.
checker.annotation.invalid_visibility       = The annotation class '%s' should have the visibility '%s'.
checker.annotation.missing_annotation       = The annotation class '%s' itself requires the annotation '%s'.
checker.annotation.missing_element_type     = The annotation class '%s' should be allowed at elements of the type '%s'.
checker.annotation.no_annotation_class      = No annotation class was specified for %s.
checker.class.invalid_name                  = The name of the definition class is not '%s'.
checker.id_func.invalid_constraints         = The constraints annotation of level-function '%s' is not valid.
checker.id_func.invalid_parameter_levels    = The parameter levels annotation of level-function '%s' is not valid.
checker.id_func.invalid_return_level        = The return level annotation of level-function '%s' is not valid.
checker.id_func.no_access                   = Couldn't access the level-function '%s' in the definition class.
checker.id_func.no_annotation               = The level-function '%s' is not annotated with the return level, the parameter levels and/or the constraints annotation.
checker.id_func.none                        = The level-function '%s' does not exists in the definition class.
checker.id_func.not_static                  = The level-function '%s' is not static.
checker.level.invalid_char                  = The name of the level '%s' contains one or more invalid special characters.
checker.level.no_default_variable           = The definition class does not provide a valid level as default for variables. Please implement the method '%s' correctly.
checker.level.no_glb                        = The definition class does not provide the greatest lower bound level. Please implement the method '%s' correctly.
checker.level.no_levels                     = The definition class provides no levels. Please implement the method '%s' correctly.
checker.level.no_lib_class_effects          = The definition class does not provide valid effects as default for library classes. Please implement the method '%s' correctly.
checker.level.no_lib_field                  = The definition class does not provide a valid level as default for library fields. Please implement the method '%s' correctly.
checker.level.no_lib_method_effects         = The definition class does not provide valid effects as default for library methods. Please implement the method '%s' correctly.
checker.level.no_lib_parameter              = The definition class does not provide valid levels as default for the parameters of library methods. Please implement the method '%s' correctly.
checker.level.no_lib_return                 = The definition class does not provide a valid level as default for the return value of library methods. Please implement the method '%s' correctly.
checker.level.no_lub                        = The definition class does not provide the least upper bound level. Please implement the method '%s' correctly.
checker.level.no_method                     = Method '%s' has no corresponding level (this is potentially a mistake).
checker.package.invalid_name                = The package of the definition class is not '%s'.

constraints.invalid_level     = The level '%s' in the constraints of method '%s' is an invalid level.
constraints.invalid_param_ref = The constraints of method '%s' contains a reference to invalid parameter (method has %d parameter(s)).

effect.cause.array_assign        = assignment to the array '%s'
effect.cause.field_assign        = assignment to the field '%s'
effect.cause.field_reference     = reference to the field '%s'
effect.cause.inherit_class       = effect annotations of the class '%s'
effect.cause.inherit_method      = effect annotations of the method '%s' or the invocation of this method
effect.cause.instantiation       = instantiation of a new object with type %s
effect.stronger_pc               = In method '%s' at source line %d a write effect to '%s' inside of a '%s' branch.

effects.class.invalid            = The write effect '%s' at class '%s' is an invalid level and thus also an invalid effect.
effects.class.non_existent       = The class '%s' provides no write effect annotation.
effects.class.none               = The class '%s' has no write effects, thus this is a less serious effect as the most serious effect '%s' of subclass '%s'.
effects.class.super_library      = Can't check whether the inheritance of the subclass '%s' to the superclass '%s' is valid because latter is a library class.
effects.class.super_stronger     = The the most serious write effect '%s' of class '%s' is less serious as the most serious effect '%s' of super class '%s'.
effects.method.invalid           = The write effect '%s' of method '%s' is an invalid level and thus also an invalid effect.
effects.method.invalid_class     = The class write effect '%s' of method '%s' is an invalid level and thus also an invalid effect.
effects.method.missing           = In method '%s' a write effect to '%s' occurs caused by %s, which is non-existent in the annotation.
effects.method.overriden_library = Can't check whether the inheritance of the method '%s' to the overridden method '%s' is valid because latter is a library method.
effects.method.superfluous       = At method '%s' a write effect to '%s' is maybe superfluous.

env_store.not_found_class         = The environment of class '%s' can't be looked up.
env_store.not_found_field_inline  = At source line %d the environment of field '%s' is required, but this environment can't be looked up.
env_store.not_found_method        = The environment of method '%s' can't be looked up.
env_store.not_found_method_inline = In method '%s' at source line %d the environment of method '%s' is required, but this environment can't be looked up.

extractor.constraints.error_lib_method_lookup  = The constraints of library method '%s' couldn't be looked up.
extractor.constraints.error_method_extraction  = The specified constraints at method '%s' couldn't be extracted.
extractor.effects.error_class_extraction       = The specified write effects at class '%s' couldn't be extracted.
extractor.effects.error_lib_class_lookup       = The write effects of library class '%s' couldn't be looked up.
extractor.effects.error_lib_method_lookup      = The write effects of library method '%s' couldn't be looked up.
extractor.effects.error_method_extraction      = The specified write effects at method '%s' couldn't be extracted.
extractor.field_level.error_extraction         = The specified field level at field '%s' couldn't be extracted.
extractor.field_level.error_lib_lookup         = The field level of library field '%s' couldn't be looked up.
extractor.field_level.error_no_level           = The field '%s' has no field level annotation.
extractor.parameter_levels.error_extraction    = The specified parameter levels at method '%s' couldn't be extracted.
extractor.parameter_levels.error_lib_lookup    = The parameter levels of library method '%s' couldn't be looked up.
extractor.parameter_levels.error_no_level      = The method '%s' has no parameter levels annotation.
extractor.parameter_levels.error_unequal_count = The count of the parameter levels for method '%s' is not equal to the count of the method parameter.
extractor.return_level.error_extraction        = The specified return level for method '%s' couldn't be extracted.
extractor.return_level.error_lib_lookup        = The return level of library method '%s' couldn't be looked up.
extractor.return_level.error_no_level          = The method '%s' has no return level annotation.
extractor.return_level.error_void_level        = The method '%s' has no return value but an annotation for the return level.

field_level.invalid  = The level '%s' of field '%s' is an invalid level.
field_level.no_level = The field '%s' has no field level.

other.constraints          = constraints of the parameters and the return value
other.field_level          = level of a field
other.invalid_return_level = The return security level '%s' for the method '%s' is an invalid security level.
other.no_visibility_tag    = The specified host doesn't have a VisibilityAnnotationTag.
other.non_void_method      = For the method '%s' doesn't exist a return security level annotation. 
other.parameter_levels     = parameter levels (the levels of method parameters)
other.return_level         = return level (the level of the value which is returned by a method)
other.tag_not_contained    = The specified VisibilityAnnotationTag doesn't have an annotation with the specified type '%s'.
other.void_method          = For the void method '%s' exists a return security level annotation and/or a reference to the return value in the constraints annotation. 
other.write_effects        = write effects of methods and classes

parameter_levels.invalid = The parameter level '%s' of method '%s' is an invalid level.

pc.invalid_comparison = Invalid comparison of the levels in method '%s' during processing of the program counter.

security.array_restrictions    = In method '%s' at source line %d a value with '%s' security level is assigned to an array field. However, because of security restrictions only assignments of values with '%s' security level are valid.
security.array_stronger_assign = In method '%s' at source line %d a value with '%s' security level is assigned to an array which has the weaker security level '%s'.
security.array_stronger_index  = In method '%s' at source line %d occurs an assignment to a '%s' security level array with '%s' level index.
security.field_stronger_assign = In method '%s' at source line %d a value with '%s' security level is assigned to the field '%s' which has the weaker security level '%s'.
security.stonger_return        = Method '%s' returns a value with '%s' security level at source line %d. Expected was '%s' or weaker.
security.stronger_param        = In method '%s' at source line %d another method '%s' will be invoked. For parameter '%s' a '%s' security level or weaker is expected, but the argument has a '%s' security level.

switch.exception          = During processing '%s' in method '%s' at source line %d an exception was thrown.
switch.no_level_for_value = The inspected value at source line %d in method '%s' has no security level.
switch.not_implemented    = The statement '%s' at line %d invokes the '%s' case in the %s [NOT IMPLEMENTED].
